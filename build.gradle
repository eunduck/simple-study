plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.duck'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// swagger - documentation
	implementation('io.springfox:springfox-swagger2:2.9.2')
	implementation('io.springfox:springfox-swagger-ui:2.9.2')

	implementation 'mysql:mysql-connector-java'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// lombok
	annotationProcessor("org.projectlombok:lombok:1.18.4")
	compileOnly("org.projectlombok:lombok:1.18.4")
	testAnnotationProcessor("org.projectlombok:lombok:1.18.4")
	testCompileOnly("org.projectlombok:lombok:1.18.4")

	implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.2'

	//mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// log4j2
	implementation("org.springframework.boot:spring-boot-starter-log4j2")

	// QueryDSL JPA
	implementation 'com.querydsl:querydsl-jpa'
	// QFile 생성 및 가져오기
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
	all*.exclude group:'org.springframework.boot', module:'spring-boot-starter-logging'
	compileOnly {
		extendsFrom annotationProcessor
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
//